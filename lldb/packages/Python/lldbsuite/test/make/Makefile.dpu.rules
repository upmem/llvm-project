#----------------------------------------------------------------------
# Clients fill in the source files to build
#----------------------------------------------------------------------
# C_SOURCES := main.c
# CXX_SOURCES :=
# OBJC_SOURCES :=
# OBJCXX_SOURCES :=
# DYLIB_C_SOURCES :=
# DYLIB_OBJC_SOURCES :=
# DYLIB_CXX_SOURCES :=
#
# Specifying DYLIB_ONLY has the effect of building dylib only, skipping
# the building of the a.out executable program.  For example,
# DYLIB_ONLY := YES
#
# Also might be of interest:
# FRAMEWORK_INCLUDES (Darwin only) :=
# CFLAGS_EXTRAS :=
# LD_EXTRAS :=
# SPLIT_DEBUG_SYMBOLS := YES
# CROSS_COMPILE :=
#
# And test/functionalities/archives/Makefile:
# MAKE_DSYM := NO
# ARCHIVE_NAME := libfoo.a
# ARCHIVE_C_SOURCES := a.c b.c

# Uncomment line below for debugging shell commands
# SHELL = /bin/sh -x

SRCDIR := $(shell dirname $(firstword $(MAKEFILE_LIST)))/
BUILDDIR := $(shell pwd)
THIS_FILE_DIR := $(shell dirname $(lastword $(MAKEFILE_LIST)))/
LLDB_BASE_DIR := $(THIS_FILE_DIR)../../../../../

OBJECTS =
EXE = a.out
LDFLAGS ?=
CFLAGS ?= -g -O0

HOST_OBJECT =
HOST_EXE =
HOST_LDFLAGS = -L$(UPMEM_HOME)/lib64 -L$(UPMEM_HOME)/lib -ldpu
HOST_CFLAGS ?= -g -O2 --std=c99

#----------------------------------------------------------------------
# Check if we have any C source files
#----------------------------------------------------------------------
ifneq "$(strip $(C_SOURCES))" ""
	OBJECTS +=$(strip $(C_SOURCES:.c=.o))
endif

#----------------------------------------------------------------------
# Check if we have any Host C source files
#----------------------------------------------------------------------
ifneq "$(strip $(HOST_C_SOURCES))" ""
	HOST_OBJECTS +=$(strip $(HOST_C_SOURCES:.c=.o.host))
	HOST_EXE = host.out
endif

#----------------------------------------------------------------------
# Compile the executable from all the objects.
#----------------------------------------------------------------------
$(EXE) : $(OBJECTS) $(HOST_EXE)
	${UPMEM_HOME}/bin/dpu-upmem-dpurte-clang $(OBJECTS) $(LDFLAGS) -o $@

%.o: %.c
	${UPMEM_HOME}/bin/dpu-upmem-dpurte-clang $(CFLAGS) $< -c -o $@

$(HOST_EXE) : $(HOST_OBJECTS)
	gcc $^ $(HOST_LDFLAGS) -o $@

%.o.host: %.c
	gcc -DDPU_EXE="\"$(CURDIR)/$(EXE)\"" $(HOST_CFLAGS) -I$(UPMEM_HOME)/include/dpu $^ -c -o $@
